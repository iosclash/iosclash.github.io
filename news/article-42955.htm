<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://iosclash.github.io/news/article-42955.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>为什么代码规范要求SQL语句不要过多的join？</title>
        <meta name="description" content="文章目录    送分题 再谈SQL Join   回顾 缓冲区 一个大前提 Join算法   Nested Loop Join Block nested loop     总结     送分题 面试官" />
        <link rel="icon" href="/assets/website/img/iosclash/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="IOS Clash节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://iosclash.github.io/news/article-42955.htm" />
    <meta property="og:site_name" content="IOS Clash节点订阅站" />
    <meta property="og:title" content="为什么代码规范要求SQL语句不要过多的join？" />
    <meta property="og:image" content="https://iosclash.github.io/uploads/20240429/9176c27aa938675abd02fb04f7f48214.webp" />
        <meta property="og:release_date" content="2025-01-19T07:10:20" />
    <meta property="og:updated_time" content="2025-01-19T07:10:20" />
        <meta property="og:description" content="文章目录    送分题 再谈SQL Join   回顾 缓冲区 一个大前提 Join算法   Nested Loop Join Block nested loop     总结     送分题 面试官" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="为什么代码规范要求SQL语句不要过多的join？">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Bootstrap -->
    <link href="/assets/website/css/iosclash/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/website/css/iosclash/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/website/css/iosclash/owl.carousel.css" rel="stylesheet">
    <link href="/assets/website/css/iosclash/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/website/css/iosclash/fontello.css">
    <link href="/assets/website/css/iosclash/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-6QH28Z9CLQ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-6QH28Z9CLQ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">IOS Clash</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">为什么代码规范要求SQL语句不要过多的join？</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <div class="toc"> <h3>文章目录</h3> <ul> <li> <ul> <li><a href="#_2" rel="nofollow">送分题</a></li> <li><a href="#SQL_Join_42" rel="nofollow">再谈SQL Join</a></li> <li> <ul> <li><a href="#_48" rel="nofollow">回顾</a></li> <li><a href="#_107" rel="nofollow">缓冲区</a></li> <li><a href="#_125" rel="nofollow">一个大前提</a></li> <li><a href="#Join_220" rel="nofollow">Join算法</a></li> <li> <ul> <li><a href="#Nested_Loop_Join_234" rel="nofollow">Nested Loop Join</a></li> <li><a href="#Block_nested_loop_246" rel="nofollow">Block nested loop</a></li> </ul> </li> </ul> </li> <li><a href="#_274" rel="nofollow">总结</a></li> </ul> </li> </ul> </div> <h2><a id="_2" rel="nofollow"></a>送分题</h2> <p><strong>面试官</strong>：有操作过Linux吗?</p> <p><strong>我</strong>：有的呀</p> <p><strong>面试官</strong>：我想查看内存的使用情况该用什么命令</p> <p><strong>我</strong>：<code>free</code> 或者<code>top</code></p> <p><strong>面试官</strong>：那你说一下用free命令都可以看到啥信息</p> <p><strong>我</strong>：那，如下图所示 可以看到内存以及缓存的使用情况</p> <ul> <li>total 总内存</li> <li>used 已用内存</li> <li>free 空闲内存</li> <li>buff/cache 已使用的缓存</li> <li>avaiable 可用内存</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/4afbd5ac66bfb30441bf252282007621.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p><strong>面试官</strong>：那你知道怎么清理已使用的缓存吗(buff/cache)</p> <p><strong>我</strong>：em… 不知道</p> <p><strong>面试官</strong>：<code>sync; echo 3 &gt; /proc/sys/vm/drop_caches</code>就可以清理<code>buff/cache</code>了，你说说我在线上执行这条命令做好不好?</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/625959e5ce861164c110f0c139974868.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p><strong>我</strong>：(送分题,内心大喜)好处大大的有，清理出缓存我们就有更多可用的内存空间, 就跟pc上面xx卫士的小火箭一样，点一下，就释放出好多的内存</p> <p><strong>面试官</strong>：em…, 回去等通知吧</p> <h2><a id="SQL_Join_42" rel="nofollow"></a>再谈SQL Join</h2> <p><strong>面试官</strong>：换个话题，谈谈你对join的理解</p> <p><strong>我</strong>： 好的（再答错就彻底完了,把握住机会)</p> <h3><a id="_48" rel="nofollow"></a>回顾</h3> <p>SQL中的<code>join</code>可以根据某些条件把指定的表给结合起来并将数据返回给客户端</p> <p><code>join</code>的方式有</p> <ul> <li><code>inner join</code> 内连接</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/7f6e16a1a45bde53594adafd31c038ed.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <ul> <li><code>left join</code> 左连接</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/35527427b9a145f934f530140a9211cc.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <ul> <li><code>right join</code> 右连接</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/3addb984a5cd5d0b028f5f9d2f037d36.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <ul> <li><code>full join</code> 全连接</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/d6bc09023ba0a8fbb3f27b767f07ace4.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <blockquote> <p>以上图片源自<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/reaptomorrow-flydream/p/8145610.html"  rel="nofollow">这里</a></p> </blockquote> <p><strong>面试官</strong>：在项目开发中如果需要使用<code>join</code>语句，如何优化提升性能?</p> <p><strong>我</strong>： 分为两种情况，数据规模小的，数据规模大的。</p> <p><strong>面试官</strong>: 然后?</p> <p><strong>我</strong>：对于</p> <ul> <li><strong>数据规模较小</strong> 全部干进内存就完事了嗷</li> <li><strong>数据规模较大</strong></li> </ul> <blockquote> <p>可以通过增加索引来优化<code>join</code>语句的执行速度 可以通过冗余信息来减少<code>join</code>的次数 尽量减少表连接的次数，一个SQL语句表连接的次数不要超过5次</p> </blockquote> <p><strong>面试官</strong>：可以总结为<code>join</code>语句是相对比较耗费性能，对吗？</p> <p><strong>我</strong>：是的</p> <p><strong>面试官</strong>: 为什么?</p> <h3><a id="_107" rel="nofollow"></a>缓冲区</h3> <p><strong>我</strong>: 在执行join语句的时候必然要有一个比较的过程</p> <p><strong>面试官</strong>: 是的</p> <p><strong>我</strong>：逐条比较两个表的语句是比较慢的，因此我们可以把两个表中数据依次读进一个<code>内存块</code>中, 以MySQL的InnoDB引擎为例，使用以下语句我们必然可以查到相关的内存区域<code>show variables like '%buffer%'</code></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/9a51fcc12a18eb32a1606ef86fd2d776.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p>如下图所示<code>join_buffer_size</code>的大小将会影响我们<code>join</code>语句的执行性能</p> <p><strong>面试官</strong>: 除此之外呢?</p> <h3><a id="_125" rel="nofollow"></a>一个大前提</h3> <p><strong>我</strong>：任何项目终究要上线，不可避免的要产生数据，数据的规模又不可能太小</p> <p><strong>面试官</strong>: 是这样的</p> <p><strong>我</strong>：大部分数据库中的数据最终要保存到<code>硬盘</code>上,并且以文件的形式进行存储。</p> <p>以MySQL的InnoDB引擎为例</p> <ul> <li>InnoDB以<code>页</code>(page)为基本的IO单位，每个页的大小为16KB</li> <li>InnoDB会为每个表创建用于存储数据的<code>.ibd</code>文件</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/dfc3f9f05ccb59db928f6e45c642de3e.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p>验证</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/d5d1255549498deb66aad42e7c172389.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p><strong>我</strong>：这意味着我们有多少表要连接就需要读多少个文件，虽然可以利用索引，但还是免不了频繁的移动硬盘的磁头</p> <p><strong>面试官</strong>：也就是说频繁的移动磁头会影响性能对吧</p> <p><strong>我</strong>：是的，现在的开源框架不都喜欢说自己通过顺序读写大大的提升了性能吗，比如<code>hbase</code>、<code>kafka</code></p> <p><strong>面试官</strong>：说的没错，那你认为<code>Linux</code>有对此做出优化吗?提示，你可以再执行一次<code>free</code>命令看一下</p> <p><strong>我</strong>：奇怪缓存怎么占用了1.2G多</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/736c37fc5686e345356e970ff19a848d.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/bfe98e8f834fea74bf6fea1288ccd840.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <blockquote> <p>图片来源<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.linuxatemyram.com/"  rel="nofollow">这里</a></p> </blockquote> <p><strong>面试官</strong>: 你有没有想过</p> <ul> <li><code>buff/cache</code> 里面存的是什么,？</li> <li>为什么<code>buff/cache</code> 占了那么多内存，可用内存即<code>availlable</code>还有<code>1.1G</code>？</li> <li>为什么你可以通过两条命令来清理<code>buff/cache</code>占用的内存，而想要释放<code>used</code>只能通过结束进程来实现?</li> </ul> <p><strong>品，你细品</strong></p> <p>思考了几分钟后</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/1ff8da4970abdf1d004440aaa35e00b8.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p><strong>我</strong>：这么随便就释放了<code>buff/cache</code>所占用的内存，说明它就不重要, 清除它不会对系统的运行造成影响</p> <p><strong>面试官</strong>: 不完全对</p> <p><strong>我</strong>：难道是？想起来《CSAPP》（深入理解计算机系统）里面说过一句话</p> <blockquote> <p>存储器层次结构的本质是，每一层存储设备都是较低一层设备的缓存</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/bdcdd82180b4107fa2756dada9ef4f49.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p>翻译成人话，就是说<strong>Linux会把内存当作是硬盘的高速缓存</strong></p> <blockquote> <p>相关资料<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://tldp.org/LDP/sag/html/buffer-cache.html"  rel="nofollow">tldp.org/LDP/sag/htm…</a></p> </blockquote> <p><strong>面试官</strong>：现在知道那道送分题应该怎么回答了吧</p> <p><strong>我</strong>：我…</p> <p></p> <h3><a id="Join_220" rel="nofollow"></a>Join算法</h3> <p><strong>面试官</strong>：再给你个机会，如果让你来实现Join算法你会怎么做?</p> <p><strong>我</strong>：无索引的话,嵌套循环就完事了嗷。有索引的话，则可以利用索引来提升性能.</p> <p><strong>面试官</strong>：说回<code>join_buffer</code> 你认为<code>join_buffer</code>里面存储的是什么?</p> <p><strong>我</strong>：在扫描过程中，数据库会选择一个表把他<strong>要返回以及需要进行和其他表进行比较的数据</strong>放进<code>join_buffer</code></p> <p><strong>面试官</strong>：有索引的情况下是怎么处理的？</p> <p><strong>我</strong>：这个就比较简单了，直接读取两个表的索引树进行比较就完事了嗷，我这边介绍一下无索引的处理方式</p> <h4><a id="Nested_Loop_Join_234" rel="nofollow"></a>Nested Loop Join</h4> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/4e0ff974f865a0fc86cee872b7e4bda9.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p>嵌套循环，每次只读取表中的一行数据，也就是说如果outerTable有10万行数据, innerTable有100行数据，需要读取<code>10000000</code>次(假设这两个表的文件没有被操作系统给缓存到内存, 我们称之为冷数据表)</p> <p>当然现在没啥数据库引擎使用这种算法（太慢了)</p> <h4><a id="Block_nested_loop_246" rel="nofollow"></a>Block nested loop</h4> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/8048fb64f8869d666e0c6225ae7b17be.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p><code>Block</code> 块，也就是说每次都会取一块数据到内存以减少I/O的开销</p> <p>当没有索引可以使用的时候，MySQL InnoDB 就会使用这种算法</p> <p>考虑以下两个表<code>t_a</code> 和<code>t_b</code></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/1f80bb9cce8e3ba7c69e5f5dc29de622.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p>当无法使用索引执行join操作的时候，InnoDB会自动使用<code>Block nested loop</code> 算法</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/d95caabd3a895cfb08b86b94f2555d43.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <h2><a id="_274" rel="nofollow"></a>总结</h2> <p>上学时，数据库老师最喜欢考数据库范式，直到上班才学会一切以性能为准，能冗余就冗余，实在冗余不了的就<code>join</code>如果<code>join</code>真的影响到性能。试着调大你的<code>join_buffer_size</code>, 或者换固态硬盘。</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-42954.htm">对象和封装总结</a></p>
                                        <p>下一个：<a href="/news/article-43450.htm">一片枫叶打一成语是什么（一片枫叶猜成语）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-18637.htm" title="宠物粮食店铺名称怎么起 宠物粮食店铺名称怎么起好听">宠物粮食店铺名称怎么起 宠物粮食店铺名称怎么起好听</a></li>
                        <li class="py-2"><a href="/news/article-29365.htm" title="动物防疫疫苗费取消的相关文件有哪些 动物防疫疫苗费取消的相关文件有哪些内容">动物防疫疫苗费取消的相关文件有哪些 动物防疫疫苗费取消的相关文件有哪些内容</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-28-node-share-links.htm" title="「12月28日」最高速度20.5M/S，2024年SSR/Clash/V2ray/Shadowrocket每天更新免费节点订阅链接">「12月28日」最高速度20.5M/S，2024年SSR/Clash/V2ray/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-31754.htm" title="动物疫苗合格证怎么办理的 动物疫苗合格证怎么办理的呢">动物疫苗合格证怎么办理的 动物疫苗合格证怎么办理的呢</a></li>
                        <li class="py-2"><a href="/news/article-33203.htm" title="动物医院贵吗多少钱一个小时（动物医院诊疗范围）">动物医院贵吗多少钱一个小时（动物医院诊疗范围）</a></li>
                        <li class="py-2"><a href="/news/article-45433.htm" title="centos7 64位下mysql5.7的安装配置卸载">centos7 64位下mysql5.7的安装配置卸载</a></li>
                        <li class="py-2"><a href="/news/article-31753.htm" title="宠物粮食品牌起名大全图片及名称视频（宠物粮食品牌起名大全图片及名称视频讲解）">宠物粮食品牌起名大全图片及名称视频（宠物粮食品牌起名大全图片及名称视频讲解）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-9-free-shadowrocket-node.htm" title="「1月9日」最高速度21.2M/S，2025年Shadowrocket/SSR/V2ray/Clash每天更新免费节点订阅链接">「1月9日」最高速度21.2M/S，2025年Shadowrocket/SSR/V2ray/Clash每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-3-free-clash.htm" title="「12月3日」最高速度21.4M/S，2024年Clash/SSR/V2ray/Shadowrocket每天更新免费节点订阅链接">「12月3日」最高速度21.4M/S，2024年Clash/SSR/V2ray/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-32233.htm" title="python 查看包的版本">python 查看包的版本</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <a href="/">IOS Clash节点订阅站</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/website/js/frontend/iosclash/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/website/js/frontend/iosclash/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/iosclash/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/iosclash/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/iosclash/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/iosclash/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/iosclash/multiple-carousel.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>