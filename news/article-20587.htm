<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://iosclash.github.io/news/article-20587.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>java自带的四种线程池</title>
        <meta name="description" content="java预定义的哪四种线程池？  newSingleThreadExexcutor：单线程数的线程池（核心线程数=最大线程数=1） newFixedThreadPool：固定线程数的线程池（核心线程数" />
        <link rel="icon" href="/assets/website/img/iosclash/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="IOS Clash节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://iosclash.github.io/news/article-20587.htm" />
    <meta property="og:site_name" content="IOS Clash节点订阅站" />
    <meta property="og:title" content="java自带的四种线程池" />
    <meta property="og:image" content="https://iosclash.github.io/uploads/20240429/8a2f84ee97e17bb790d6c8d9799f0ffd.webp" />
        <meta property="og:release_date" content="2024-12-03T00:14:56" />
    <meta property="og:updated_time" content="2024-12-03T00:14:56" />
        <meta property="og:description" content="java预定义的哪四种线程池？  newSingleThreadExexcutor：单线程数的线程池（核心线程数=最大线程数=1） newFixedThreadPool：固定线程数的线程池（核心线程数" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="java自带的四种线程池">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Bootstrap -->
    <link href="/assets/website/css/iosclash/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/website/css/iosclash/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/website/css/iosclash/owl.carousel.css" rel="stylesheet">
    <link href="/assets/website/css/iosclash/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/website/css/iosclash/fontello.css">
    <link href="/assets/website/css/iosclash/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-6QH28Z9CLQ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-6QH28Z9CLQ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">IOS Clash</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">java自带的四种线程池</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<h4 id="java预定义的哪四种线程池">java预定义的哪四种线程池？</h4> <ul> <li>newSingleThreadExexcutor：单线程数的线程池（核心线程数=最大线程数=1）</li> <li>newFixedThreadPool：固定线程数的线程池（核心线程数=最大线程数=自定义）</li> <li>newCacheThreadPool：可缓存的线程池（核心线程数=0，最大线程数=Integer.MAX_VALUE）</li> <li>newScheduledThreadPool：支持定时或周期任务的线程池（核心线程数=自定义，最大线程数=Integer.MAX_VALUE）</li> </ul> <h4 id="四种线程池有什么区别">四种线程池有什么区别？</h4> <p>上面四种线程池类都继承ThreadPoolExecutor，在创建时都是直接返回new ThreadPoolExecutor(参数)，它们的区别是定义的ThreadPoolExecutor(参数)中参数不同，而ThreadPoolExecutor又继承ExecutorService接口类</p> <ul> <li>newFixedThreadPool</li> </ul> <pre><code>定义： ExecutorService executorService=Executors.newFixedThreadPool(2);</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/253a9853e2c2fefc83a5d533fd1ae592.jpg" alt="java自带的四种线程池"></p> <p>缺点：使用了LinkBlockQueue的链表型阻塞队列，当任务的堆积速度大于处理速度时，容易堆积任务而导致OOM内存溢出</p> <ul> <li>newSingleThreadExecutor</li> </ul> <pre><code>定义：ExecutorService executorService =Executors.newSingleThreadExecutor();</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/3c223fcf8a728ff4463c0136dd956110.jpg" alt="java自带的四种线程池"></p> <p>上面代码神似new FixedThreadPoop(1)，但又有区别，因为外面多了一层FinalizableDelegatedExecutorService，其作用：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/c50d7860b125ccbab167cd47b463c3aa.jpg" alt="java自带的四种线程池"></p> <p>可知，fixedExecutorService的本质是ThreadPoolExecutor,所以fixedExecutorService可以强转成ThreadPoolExecutor，但singleExecutorService与ThreadPoolExecutor无任何关系，所以强转失败，故newSingleThreadExecutor()被创建后，无法再修改其线程池参数，真正地做到single单个线程。</p> <p>缺点：使用了LinkBlockQueue的链表型阻塞队列，当任务的堆积速度大于处理速度时，容易堆积任务而导致OOM内存溢出</p> <ul> <li>newCacheThreadPool</li> </ul> <pre><code>定义：ExecutorService executorService=Executors.newCacheThreadPool();</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/1c0a5c0a2ac3e7a10a24ed9dda619c1d.jpg" alt="java自带的四种线程池"></p> <p>缺点：SynchronousQueue是BlockingQueue的一种实现，它也是一个队列，因为最大线程数为Integer.MAX_VALUE，所有当线程过多时容易OOM内存溢出</p> <ul> <li>ScheduledThreadPool</li> </ul> <pre><code>定义：ExecutorService executorService=Executors.newScheduledThreadPool(2);</code></pre> <pre><code>源码： public static ScheduledExecutorService newScheduledThreadPool(int corePoolSize) {         //ScheduledThreadPoolExecutor继承ThreadPoolExecutor         return new ScheduledThreadPoolExecutor(corePoolSize);     }      public ScheduledThreadPoolExecutor(int corePoolSize) {     //ScheduledThreadPoolExecutor继承ThreadPoolExecutor，故super()会调用ThreadPoolExecutor的构造函数初始化并返回一个ThreadPoolExecutor，而ThreadPoolExecutor使实现ExecutorService接口的     //最终ScheduledThreadPoolExecutor也和上面几种线程池一样返回的是ExecutorService接口的实现类ThreadPoolExecutor     super(corePoolSize, Integer.MAX_VALUE, 0, NANOSECONDS,           new DelayedWorkQueue()); }</code></pre> <h4 id="线程池有哪几个重要参数">线程池有哪几个重要参数？</h4> <p>ThreadPoolExecutor构造方法如下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/32b7246bea606861a284670d7cfa7342.jpg" alt="java自带的四种线程池"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/a578d7e40926e855ec9e9592c4003441.jpg" alt="java自带的四种线程池"></p> <ul> <li>keepAliveTime是指当前线程数位于 [核心线程数,最大线程数] 之间的这些非核心线程等待多久空闲时间而没有活干时，就退出线程池；</li> <li>等待丢列的大小与最大线程数是没有任何关系的，线程创建优先级=核心线程 &gt; 阻塞队列 &gt; 扩容的线程(当前核心线程数小于最大线程数时才能扩容线程)</li> <li>假如核心线程数5，等待队列长度为3，最大线程数10：当线程数不断在增加时，先创建5个核心线程，核心线程数满了再把线程丢进等待丢列，等待队列满了(3个线程)，此时会比较最大线程数（只有等待丢列满了最大线程数才能出场），还可以继续创建2个线程（5+3+2），若线程数超过了最大线程数，则执行拒绝策略；</li> <li>假如核心线程数5，等待队列长度为3，最大线程数7：当线程数不断在增加时，先创建5个核心线程，核心线程数满了再把线程丢进等待丢列，当等待队列中有2个线程时达到了最大线程数(5+2=7)，但是等待丢列还没满所以不用管最大线程数，直到等待丢列满了（3个阻塞线程），此时会比较最大线程数（只有等待丢列满了最大线程数才能出场），此时核心+等待丢列=5+3=8&gt;7=最大线程数，即已经达到最大线程数了，则执行拒绝策略；</li> <li>如果把等待丢列设置为LinkedBlockingQueue无界丢列，这个丢列是无限大的，就永远不会走到判断最大线程数那一步了</li> </ul> <h4 id="如何自定义线程池">如何自定义线程池</h4> <p>可以使用有界队列，自定义线程创建工厂ThreadFactory和拒绝策略handler来自定义线程池</p> <pre><code>public class ThreadTest {     public static void main(String[] args) throws InterruptedException, IOException {         int corePoolSize = 2;         int maximumPoolSize = 4;         long keepAliveTime = 10;         TimeUnit unit = TimeUnit.SECONDS;         BlockingQueue&lt;Runnable&gt; workQueue = new ArrayBlockingQueue&lt;&gt;(2);         ThreadFactory threadFactory = new NameTreadFactory();         RejectedExecutionHandler handler = new MyIgnorePolicy();        ThreadPoolExecutor executor = new ThreadPoolExecutor(corePoolSize, maximumPoolSize, keepAliveTime, unit,                 workQueue, threadFactory, handler);         executor.prestartAllCoreThreads(); // 预启动所有核心线程                 for (int i = 1; i &lt;= 10; i++) {             MyTask task = new MyTask(String.valueOf(i));             executor.execute(task);         }         System.in.read(); //阻塞主线程     }     static class NameTreadFactory implements ThreadFactory {         private final AtomicInteger mThreadNum = new AtomicInteger(1);         @Override         public Thread newThread(Runnable r) {             Thread t = new Thread(r, "my-thread-" + mThreadNum.getAndIncrement());             System.out.println(t.getName() + " has been created");             return t;         }     }      public static class MyIgnorePolicy implements RejectedExecutionHandler {         @Override         public void rejectedExecution(Runnable r, ThreadPoolExecutor e) {             doLog(r, e);         }         private void doLog(Runnable r, ThreadPoolExecutor e) {             // 可做日志记录等             System.err.println( r.toString() + " rejected"); //          System.out.println("completedTaskCount: " + e.getCompletedTaskCount());         }     }      static class MyTask implements Runnable {         private String name;         public MyTask(String name) {             this.name = name;         }         @Override         public void run() {             try {                 System.out.println(this.toString() + " is running!");                 Thread.sleep(3000); //让任务执行慢点             } catch (InterruptedException e) {                 e.printStackTrace();             }         }         public String getName() {             return name;         }         @Override         public String toString() {             return "MyTask [name=" + name + "]";         }     } }</code></pre> <p>运行结果：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/4270897989325bb9b56ceb6940858c59.jpg" alt="java自带的四种线程池"></p> <p>其中7-10号线程被拒绝策略拒绝了，1、2号线程执行完后，3、6号线程进入核心线程池执行，此时4、5号线程在任务队列等待执行，3、6线程执行完再通知4、5线程执行</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-20129.htm">动物疫苗接种简报内容 动物疫苗接种简报内容怎么写</a></p>
                                        <p>下一个：<a href="/news/article-20588.htm">宠物医院猫癣（宠物医院 猫癣）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-33663.htm" title="PHP如何访问全局类">PHP如何访问全局类</a></li>
                        <li class="py-2"><a href="/news/article-48884.htm" title="猫三联大概多少钱一针（猫三联多少钱一针多久打一次）">猫三联大概多少钱一针（猫三联多少钱一针多久打一次）</a></li>
                        <li class="py-2"><a href="/news/article-45945.htm" title="Vue3项目中动态组件component的使用">Vue3项目中动态组件component的使用</a></li>
                        <li class="py-2"><a href="/news/article-19212.htm" title="实现宠物领养功能java（实现领养宠物的功能对象）">实现宠物领养功能java（实现领养宠物的功能对象）</a></li>
                        <li class="py-2"><a href="/news/article-29365.htm" title="动物防疫疫苗费取消的相关文件有哪些 动物防疫疫苗费取消的相关文件有哪些内容">动物防疫疫苗费取消的相关文件有哪些 动物防疫疫苗费取消的相关文件有哪些内容</a></li>
                        <li class="py-2"><a href="/news/article-47405.htm" title="宠物医院消费贵吗（宠物医院收费价目表）">宠物医院消费贵吗（宠物医院收费价目表）</a></li>
                        <li class="py-2"><a href="/news/article-41468.htm" title="最贵的猫前十名（宠物猫咪价格表）">最贵的猫前十名（宠物猫咪价格表）</a></li>
                        <li class="py-2"><a href="/news/article-31753.htm" title="宠物粮食品牌起名大全图片及名称视频（宠物粮食品牌起名大全图片及名称视频讲解）">宠物粮食品牌起名大全图片及名称视频（宠物粮食品牌起名大全图片及名称视频讲解）</a></li>
                        <li class="py-2"><a href="/news/article-39973.htm" title="同城宠物领养赠送（有没有同城领养宠物的小程序）">同城宠物领养赠送（有没有同城领养宠物的小程序）</a></li>
                        <li class="py-2"><a href="/news/article-30331.htm" title="动物防疫管理要点有哪些内容（动物防疫相关管理制度）">动物防疫管理要点有哪些内容（动物防疫相关管理制度）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <a href="/">IOS Clash节点订阅站</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/website/js/frontend/iosclash/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/website/js/frontend/iosclash/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/iosclash/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/iosclash/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/iosclash/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/iosclash/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/iosclash/multiple-carousel.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>